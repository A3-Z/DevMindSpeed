// <auto-generated />
using System;
using DevMindSpeed.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevMindSpeed.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DevMindSpeed.Entity.Aggregates.GameAggregate.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("BestScore")
                        .HasColumnType("float");

                    b.Property<float>("CurrentScore")
                        .HasColumnType("float");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("Ended")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PlayerName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TimeStarted")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("TotalTimeSpent")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DevMindSpeed.Entity.Aggregates.QuestionAggregate.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("CorrectAnswer")
                        .HasColumnType("float");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Equation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GameId")
                        .HasColumnType("char(36)");

                    b.Property<float?>("PlayerAnswer")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeAsked")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("TimeTaken")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("DevMindSpeed.Entity.Aggregates.QuestionAggregate.Question", b =>
                {
                    b.HasOne("DevMindSpeed.Entity.Aggregates.GameAggregate.Game", "Game")
                        .WithMany("Questions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("DevMindSpeed.Entity.Aggregates.GameAggregate.Game", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
